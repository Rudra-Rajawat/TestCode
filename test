const handleSubmit = async (event) => {
  event.preventDefault();
  const formErrors = validateForm();
  if (Object.keys(formErrors).length > 0) {
    setErrors(formErrors);
    return;
  }
  setErrors({});

  const patientData = {
    name,
    age,
    gender
  };

  try {
    // Check if patient is already registered
    const checkPatientResponse = await axios.get(`http://localhost:9096/patients/check?name=${name}`, {
      headers: {
        Authorization: `Bearer ${auth.token}`
      }
    });

    let patientId;
    if (checkPatientResponse.data.exists) {
      // Patient already registered, use their existing ID
      patientId = checkPatientResponse.data.id;
    } else {
      // Register new patient
      const registerResponse = await axios.post('http://localhost:9096/patients/register', patientData, {
        headers: {
          Authorization: `Bearer ${auth.token}`
        }
      });
      patientId = registerResponse.data.id;
    }

    localStorage.setItem('patientId', patientId); // Store patient ID in local storage

    const selectedHospital = hospitals.find(h => h.name === hospital);
    const selectedDepartment = departments.find(d => d.name === department);

    // Book the appointment
    const bookingUrl = `http://localhost:9096/patients/${patientId}/register/${selectedHospital.id}/toDepartment/${selectedDepartment.id}`;
    await axios.post(bookingUrl, {}, {
      headers: {
        Authorization: `Bearer ${auth.token}`
      }
    });

    setShowModal(true);
  } catch (error) {
    console.error('Error processing patient registration or booking:', error);
  }
};
